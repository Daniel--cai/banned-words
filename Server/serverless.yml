service: banned-words-game

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: ap-southeast-2
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    BANNED_WORD_LIST_TABLE: ${self:custom.secrets.BANNED_WORDS_LIST_TABLE} 

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.secrets.BANNED_WORDS_LIST_TABLE}"

functions:
  list:
    handler: lobby/handler.getWords
    events:
      - http:
          path: lobby
          method: get
          cors: true
    environment:
      BANNED_WORDS_LIST_TABLE: ${self:custom.secrets.BANNED_WORDS_LIST_TABLE}
  game:
    handler: lobby/create.createLobby
    events:
      - http: 
          path: lobby
          method: post
          cors : true
resources:
  Resources:
    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
    AppSyncServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: "dynamo-AppSyncServiceRole"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Principal:
                Service:
                  - "appsync.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          -
            PolicyName: "Dynamo-AppSyncServiceRole-Policy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: "Allow"
                  Action:
                    - "dynamodb:Query"
                    - "dynamodb:BatchWriteItem"
                    - "dynamodb:GetItem"
                    - "dynamodb:DeleteItem"
                    - "dynamodb:PutItem"
                    - "dynamodb:Scan"
                    - "dynamodb:UpdateItem"
                  Resource:
                    - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

custom:
  secrets: ${file(secret.${opt:stage, self:provider.stage}.yml)}
  webpackIncludeModules: true
  accountId: ${self:custom.secrets.ACCOUNTID}
  appSyncDataSource: banned_words_game
  appSync:
    name: banned-words-graphql
    authenticationType: API_KEY
    apiId:  ${self:custom.secrets.APPSYNC_API_ID}
    apiKey: ${self:custom.secrets.APPSYNC_API_KEY}
    mappingTemplatesLocation: MappingTemplates
    mappingTemplates:
      - dataSource: ${self:custom.appSyncDataSource}
        type: Query
        field: getGame
        request: "getGame.request"
        response: "getGame.response" 
    schema: schema.graphql 
    serviceRole: "AppSyncServiceRole"
    dataSources:
      - type: AMAZON_DYNAMODB
        name: ${self:custom.appSyncDataSource}
        description: dynamodb
        config:
          tableName: ${self:provider.environment.DYNAMODB_TABLE}
          serviceRoleArn: "arn:aws:iam::${self:custom.accountId}:role/dynamo-${self:custom.appSync.serviceRole}"


plugins:
  - serverless-dynamodb-local
  - serverless-webpack
  - serverless-offline
  - serverless-appsync-plugin